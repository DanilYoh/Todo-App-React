{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danil\\\\VSCodeProjects\\\\todo-app-react\\\\src\\\\components\\\\app\\\\App.js\";\nimport React, { Component } from 'react';\nimport NewTaskForm from '../new-task-form';\nimport TaskList from '../task-list';\nimport Footer from '../footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      taskData: [this.createTaskItem('Сompleted task'), this.createTaskItem('Editing task'), this.createTaskItem('Active task')],\n      filter: 'all'\n    };\n\n    this.onFilterChange = filter => {\n      this.setState({\n        filter\n      });\n    };\n\n    this.onEdit = id => {\n      this.toggleProperty(id, 'editing');\n    };\n\n    this.onToggleDone = id => {\n      this.toggleProperty(id, 'done');\n    };\n\n    this.addTask = text => {\n      const newItem = this.createTaskItem(text);\n      this.setState(_ref => {\n        let {\n          taskData\n        } = _ref;\n        const newArr = [...taskData, newItem];\n        return {\n          taskData: newArr\n        };\n      });\n    };\n\n    this.handleEditTask = (id, text) => {\n      this.setState(_ref2 => {\n        let {\n          taskData\n        } = _ref2;\n        const newArr = taskData.map((el, i) => {\n          if (el.id === id) {\n            el.label = text;\n            el.editing = !taskData[i].editing;\n          }\n\n          return el;\n        });\n        return {\n          taskData: newArr\n        };\n      });\n    };\n\n    this.deleteTask = id => {\n      this.setState(_ref3 => {\n        let {\n          taskData\n        } = _ref3;\n        return {\n          taskData: taskData.filter(item => item.id !== id)\n        };\n      });\n    };\n\n    this.toggleProperty = (id, propName) => {\n      this.setState(_ref4 => {\n        let {\n          taskData\n        } = _ref4;\n        const newArr = taskData.map((el, i) => {\n          if (el.id === id) {\n            el[propName] = !taskData[i][propName];\n          }\n\n          return el;\n        });\n        return {\n          taskData: newArr\n        };\n      });\n    };\n\n    this.onClearCompleted = () => {\n      this.setState(_ref5 => {\n        let {\n          taskData\n        } = _ref5;\n        return {\n          taskData: taskData.filter(el => !el.active)\n        };\n      });\n    };\n  }\n\n  createTaskItem(label) {\n    return {\n      label: label,\n      id: Math.floor(Math.random() * 1000000),\n      completed: false,\n      active: true,\n      editing: false\n    };\n  }\n\n  filter(items, filter) {\n    switch (filter) {\n      case 'all':\n        return items;\n\n      case 'active':\n        return items.filter(item => item.active);\n\n      case 'done':\n        return items.filter(item => !item.active);\n\n      default:\n        return items;\n    }\n  }\n\n  render() {\n    const taskCount = this.state.taskData.filter(e => e.active).length;\n    const visibleTasks = this.filter(this.state.taskData, this.state.filter);\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"todoapp\",\n      children: [/*#__PURE__*/_jsxDEV(NewTaskForm, {\n        onAddTask: this.addTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"main\",\n        children: [/*#__PURE__*/_jsxDEV(TaskList, {\n          taskData: visibleTasks,\n          onDeleted: this.deleteTask,\n          onToggleDone: this.onToggleDone,\n          onEdit: this.onEdit,\n          handleEditTask: this.handleEditTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {\n          count: taskCount,\n          filter: this.state.filter,\n          onFilterChange: this.onFilterChange,\n          onClearCompleted: this.onClearCompleted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"names":["React","Component","NewTaskForm","TaskList","Footer","App","state","taskData","createTaskItem","filter","onFilterChange","setState","onEdit","id","toggleProperty","onToggleDone","addTask","text","newItem","newArr","handleEditTask","map","el","i","label","editing","deleteTask","item","propName","onClearCompleted","active","Math","floor","random","completed","items","render","taskCount","e","length","visibleTasks"],"sources":["C:/Users/danil/VSCodeProjects/todo-app-react/src/components/app/App.js"],"sourcesContent":["import React, { Component } from 'react';\n\nimport NewTaskForm from '../new-task-form';\nimport TaskList from '../task-list';\nimport Footer from '../footer';\n\nexport default class App extends Component {\n\n  // deleteTask = (id) => {\n  //   this.setState(({ taskData }) => {\n  //     const idx = taskData.findIndex((e) => e.id === id);\n  //     const newArr = [...taskData.slice(0, idx), ...taskData.slice(idx + 1)];\n\n  //     return {\n  //       taskData: newArr,\n  //     };\n  //   });\n  // };\n\n  // onToggleDone = (id) => {\n  //   this.setState(({ taskData }) => {\n  //     const idx = taskData.findIndex((e) => e.id === id);\n  //     const oldItem = taskData[idx];\n  //     const newItem = { ...oldItem, active: !oldItem.active };\n  //     const newArr = [...taskData.slice(0, idx), newItem, ...taskData.slice(idx + 1)];\n  //     return {\n  //       taskData: newArr,\n  //     };\n  //   });\n  // };\n\n  // onClearCompleted = () => {\n  //   this.setState(({ taskData }) => {\n  //     const newArr = taskData.filter((task) => {\n  //       return task.active;\n  //     });\n  //     return {\n  //       taskData: newArr,\n  //     };\n  //   });\n  // };\n\n  // onEdit = (id) => {\n  //   this.setState(({ taskData }) => {\n  //     const idx = taskData.findIndex((e) => e.id === id);\n  //     const oldItem = taskData[idx];\n  //     const newItem = { ...oldItem, edit: !oldItem.edit };\n  //     const newArr = [...taskData.slice(0, idx), newItem, ...taskData.slice(idx + 1)];\n  //     return {\n  //       taskData: newArr,\n  //     };\n  //   });\n  // };\n\n  // handleEditTask = (id, text) => {\n  //   this.setState(({ taskData }) => {\n  //     const idx = taskData.findIndex((e) => e.id === id);\n  //     const oldItem = taskData[idx];\n  //     const newItem = { ...oldItem, label: text, edit: false };\n  //     const newArr = [...taskData.slice(0, idx), newItem, ...taskData.slice(idx + 1)];\n  //     return {\n  //       taskData: newArr,\n  //     };\n  //   });\n  // };\n\n  // onFilterChange = (filter) => {\n  //   this.setState({ filter });\n  // };\n\n  state = {\n    taskData: [\n      this.createTaskItem('Сompleted task'),\n      this.createTaskItem('Editing task'),\n      this.createTaskItem('Active task'),\n    ],\n    filter: 'all',\n  };\n\n  createTaskItem(label) {\n    return {\n      label: label,\n      id: Math.floor(Math.random() * 1000000),\n      completed: false,\n      active: true,\n      editing: false,\n    };\n  }\n  \n  onFilterChange = (filter) => {\n    this.setState({\n      filter,\n    });\n  };\n\n  onEdit = (id) => {\n    this.toggleProperty(id, 'editing');\n  };\n\n  onToggleDone = (id) => {\n    this.toggleProperty(id, 'done');\n  };\n\n  addTask = (text) => {\n    const newItem = this.createTaskItem(text);\n\n    this.setState(({ taskData }) => {\n      const newArr = [...taskData, newItem];\n      return {\n        taskData: newArr,\n      };\n    });\n  };\n\n  handleEditTask = (id, text) => {\n    this.setState(({ taskData }) => {\n      const newArr = taskData.map((el, i) => {\n        if (el.id === id) {\n          el.label = text;\n          el.editing = !taskData[i].editing;\n        }\n        return el;\n      });\n      return {\n        taskData: newArr,\n      };\n    });\n  };\n\n  deleteTask = (id) => {\n    this.setState(({ taskData }) => ({\n      taskData: taskData.filter((item) => item.id !== id),\n    }));\n  };\n\n  toggleProperty = (id, propName) => {\n    this.setState(({ taskData }) => {\n      const newArr = taskData.map((el, i) => {\n        if (el.id === id) {\n          el[propName] = !taskData[i][propName];\n        }\n        return el;\n      });\n      return {\n        taskData: newArr,\n      };\n    });\n  };\n\n  filter(items, filter) {\n    switch (filter) {\n      case 'all':\n        return items;\n      case 'active':\n        return items.filter((item) => item.active);\n      case 'done':\n        return items.filter((item) => !item.active);\n      default:\n        return items;\n    }\n  }\n\n  onClearCompleted = () => {\n    this.setState(({ taskData }) => ({\n      taskData: taskData.filter((el) => !el.active),\n    }));\n  };\n\n  render() {\n    const taskCount = this.state.taskData.filter((e) => e.active).length;\n    const visibleTasks = this.filter(this.state.taskData, this.state.filter);\n    return (\n      <section className=\"todoapp\">\n        <NewTaskForm onAddTask={this.addTask} />\n        <section className=\"main\">\n          <TaskList\n            taskData={visibleTasks}\n            onDeleted={this.deleteTask}\n            onToggleDone={this.onToggleDone}\n            onEdit={this.onEdit}\n            handleEditTask={this.handleEditTask}\n          />\n          <Footer\n            count={taskCount}\n            filter={this.state.filter}\n            onFilterChange={this.onFilterChange}\n            onClearCompleted={this.onClearCompleted}\n          />\n        </section>\n      </section>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}