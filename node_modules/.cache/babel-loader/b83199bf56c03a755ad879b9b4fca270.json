{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danil\\\\Desktop\\\\todo-app-main\\\\src\\\\components\\\\app\\\\App.js\";\nimport React, { Component } from 'react';\nimport NewTaskForm from '../new-task-form';\nimport TaskList from '../task-list';\nimport Footer from '../footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      taskData: [this.createTaskItem('Сompleted task'), this.createTaskItem('Editing task'), this.createTaskItem('Active task')],\n      filter: 'all'\n    };\n\n    this.deleteTask = id => {\n      this.setState(_ref => {\n        let {\n          taskData\n        } = _ref;\n        const idx = taskData.findIndex(e => e.id === id);\n        const newArr = [...taskData.slice(0, idx), ...taskData.slice(idx + 1)];\n        return {\n          taskData: newArr\n        };\n      });\n    };\n\n    this.onToggleDone = id => {\n      this.setState(_ref2 => {\n        let {\n          taskData\n        } = _ref2;\n        const idx = taskData.findIndex(e => e.id === id);\n        const oldItem = taskData[idx];\n        const newItem = { ...oldItem,\n          active: !oldItem.active\n        };\n        const newArr = [...taskData.slice(0, idx), newItem, ...taskData.slice(idx + 1)];\n        return {\n          taskData: newArr\n        };\n      });\n    };\n\n    this.addTask = text => {\n      const newItem = this.createTaskItem(text);\n      this.setState(_ref3 => {\n        let {\n          taskData\n        } = _ref3;\n        const newArr = [...taskData, newItem];\n        return {\n          taskData: newArr\n        };\n      });\n    };\n\n    this.onClearCompleted = () => {\n      this.setState(_ref4 => {\n        let {\n          taskData\n        } = _ref4;\n        const newArr = taskData.filter(task => {\n          return task.active;\n        });\n        return {\n          taskData: newArr\n        };\n      });\n    };\n\n    this.onFilterChange = filter => {\n      this.setState({\n        filter\n      });\n    };\n\n    this.onEdit = id => {\n      this.setState(_ref5 => {\n        let {\n          taskData\n        } = _ref5;\n        const idx = taskData.findIndex(e => e.id === id);\n        const oldItem = taskData[idx];\n        const newItem = { ...oldItem,\n          edit: !oldItem.edit\n        };\n        const newArr = [...taskData.slice(0, idx), newItem, ...taskData.slice(idx + 1)];\n        return {\n          taskData: newArr\n        };\n      });\n    };\n\n    this.handleEditTask = (id, text) => {\n      this.setState(_ref6 => {\n        let {\n          taskData\n        } = _ref6;\n        const idx = taskData.findIndex(el => el.id === id);\n        const oldItem = taskData[idx];\n        const newItem = { ...oldItem,\n          label: text,\n          edit: false\n        };\n        const newArr = [...taskData.slice(0, idx), newItem, ...taskData.slice(idx + 1)];\n        return {\n          taskData: newArr\n        };\n      });\n    };\n  }\n\n  setId() {\n    return \"key\" + (Date.now() - Math.ceil(1000 * Math.random()));\n  }\n\n  createTaskItem(label) {\n    return {\n      label: label,\n      id: this.setId(),\n      active: true,\n      edit: false\n    };\n  }\n\n  filter(items, filter) {\n    switch (filter) {\n      case 'all':\n        return items;\n\n      case 'active':\n        return items.filter(item => item.active);\n\n      case 'done':\n        return items.filter(item => !item.active);\n\n      default:\n        return items;\n    }\n  }\n\n  render() {\n    const taskCount = this.state.taskData.filter(el => el.active).length;\n    const visibleTasks = this.filter(this.state.taskData, this.state.filter);\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"todoapp\",\n      children: [/*#__PURE__*/_jsxDEV(NewTaskForm, {\n        onAddTask: this.addTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"main\",\n        children: [/*#__PURE__*/_jsxDEV(TaskList, {\n          taskData: visibleTasks,\n          onDeleted: this.deleteTask,\n          onToggleDone: this.onToggleDone,\n          onEdit: this.onEdit,\n          handleEditTask: this.handleEditTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {\n          count: taskCount,\n          filter: this.state.filter,\n          onFilterChange: this.onFilterChange,\n          onClearCompleted: this.onClearCompleted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"names":["React","Component","NewTaskForm","TaskList","Footer","App","state","taskData","createTaskItem","filter","deleteTask","id","setState","idx","findIndex","e","newArr","slice","onToggleDone","oldItem","newItem","active","addTask","text","onClearCompleted","task","onFilterChange","onEdit","edit","handleEditTask","el","label","setId","Date","now","Math","ceil","random","items","item","render","taskCount","length","visibleTasks"],"sources":["C:/Users/danil/Desktop/todo-app-main/src/components/app/App.js"],"sourcesContent":["import React, { Component } from 'react';\n\nimport NewTaskForm from '../new-task-form';\nimport TaskList from '../task-list';\nimport Footer from '../footer';\n\nexport default class App extends Component {\n  setId() {\n    return \"key\" + (Date.now() - Math.ceil(1000 * Math.random()))\n  };\n\n  createTaskItem(label) {\n    return {\n      label: label,\n      id: this.setId(),\n      active: true,\n      edit: false,\n    };\n  }\n\n  state = {\n    taskData: [\n      this.createTaskItem('Сompleted task'),\n      this.createTaskItem('Editing task'),\n      this.createTaskItem('Active task'),\n    ],\n    filter: 'all',\n  };\n\n  deleteTask = (id) => {\n    this.setState(({ taskData }) => {\n      const idx = taskData.findIndex((e) => e.id === id);\n      const newArr = [...taskData.slice(0, idx), ...taskData.slice(idx + 1)];\n\n      return {\n        taskData: newArr,\n      };\n    });\n  };\n\n  onToggleDone = (id) => {\n    this.setState(({ taskData }) => {\n      const idx = taskData.findIndex((e) => e.id === id);\n      const oldItem = taskData[idx];\n      const newItem = { ...oldItem, active: !oldItem.active };\n      const newArr = [...taskData.slice(0, idx), newItem, ...taskData.slice(idx + 1)];\n      return {\n        taskData: newArr,\n      };\n    });\n  };\n\n  addTask = (text) => {\n    const newItem = this.createTaskItem(text);\n\n    this.setState(({ taskData }) => {\n      const newArr = [...taskData, newItem];\n      return {\n        taskData: newArr,\n      };\n    });\n  };\n\n  onClearCompleted = () => {\n    this.setState(({ taskData }) => {\n      const newArr = taskData.filter((task) => {\n        return task.active;\n      });\n      return {\n        taskData: newArr,\n      };\n    });\n  };\n\n  filter(items, filter) {\n    switch (filter) {\n      case 'all':\n        return items;\n      case 'active':\n        return items.filter((item) => item.active);\n      case 'done':\n        return items.filter((item) => !item.active);\n      default:\n        return items;\n    }\n  }\n\n  onFilterChange = (filter) => {\n    this.setState({ filter });\n  };\n\n  onEdit = (id) => {\n    this.setState(({ taskData }) => {\n      const idx = taskData.findIndex((e) => e.id === id);\n      const oldItem = taskData[idx];\n      const newItem = { ...oldItem, edit: !oldItem.edit };\n      const newArr = [...taskData.slice(0, idx), newItem, ...taskData.slice(idx + 1)];\n      return {\n        taskData: newArr,\n      };\n    });\n  };\n\n  handleEditTask = (id, text) => {\n    this.setState(({ taskData }) => {\n      const idx = taskData.findIndex((el) => el.id === id);\n      const oldItem = taskData[idx];\n      const newItem = { ...oldItem, label: text, edit: false };\n      const newArr = [...taskData.slice(0, idx), newItem, ...taskData.slice(idx + 1)];\n      return {\n        taskData: newArr,\n      };\n    });\n  };\n\n  render() {\n    const taskCount = this.state.taskData.filter((el) => el.active).length;\n    const visibleTasks = this.filter(this.state.taskData, this.state.filter);\n    return (\n      <section className=\"todoapp\">\n        <NewTaskForm onAddTask={this.addTask} />\n        <section className=\"main\">\n          <TaskList\n            taskData={visibleTasks}\n            onDeleted={this.deleteTask}\n            onToggleDone={this.onToggleDone}\n            onEdit={this.onEdit}\n            handleEditTask={this.handleEditTask}\n          />\n          <Footer\n            count={taskCount}\n            filter={this.state.filter}\n            onFilterChange={this.onFilterChange}\n            onClearCompleted={this.onClearCompleted}\n          />\n        </section>\n      </section>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}