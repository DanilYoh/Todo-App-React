{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danil\\\\VSCodeProjects\\\\todo-app-react\\\\src\\\\components\\\\task-list\\\\task-list.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Task from '../task';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskList = _ref => {\n  let {\n    taskData,\n    onDeleted,\n    onToggleDone,\n    onEdit,\n    handleEditTask\n  } = _ref;\n  const elements = taskData.map(item => {\n    const {\n      id,\n      ...taskProps\n    } = item;\n    return /*#__PURE__*/_jsxDEV(Task, {\n      id: id,\n      onDeleted: () => onDeleted(id),\n      onToggleCompleted: () => onToggleCompleted(id),\n      onToggleEditing: () => onToggleEditing(id),\n      editingItem: editingItem,\n      ...taskProps\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"todo-list\",\n    children: elements\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 10\n  }, this);\n};\n\n_c = TaskList;\nTaskList.defaultProps = {\n  onDeleted: () => {},\n  onToggleDone: () => {},\n  onEdit: () => {},\n  handleEditTask: () => {}\n};\nTaskList.propTypes = {\n  onDeleted: PropTypes.func,\n  onToggleDone: PropTypes.func,\n  onEdit: PropTypes.func,\n  handleEditTask: PropTypes.func\n};\nexport default TaskList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","PropTypes","Task","TaskList","taskData","onDeleted","onToggleDone","onEdit","handleEditTask","elements","map","item","id","taskProps","onToggleCompleted","onToggleEditing","editingItem","defaultProps","propTypes","func"],"sources":["C:/Users/danil/VSCodeProjects/todo-app-react/src/components/task-list/task-list.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Task from '../task';\n\nconst TaskList = ({ taskData, onDeleted, onToggleDone, onEdit, handleEditTask }) => {\n  const elements = taskData.map((item) => {\n    const { id, ...taskProps } = item;\n    return (\n      <Task\n        key={id}\n        id={id}\n        onDeleted={() => onDeleted(id)}\n        onToggleCompleted={() => onToggleCompleted(id)}\n        onToggleEditing={() => onToggleEditing(id)}\n        editingItem={editingItem}\n        {...taskProps}\n      />\n    );\n  });\n  return <ul className=\"todo-list\">{elements}</ul>;\n};\n\nTaskList.defaultProps = {\n  onDeleted: () => {},\n  onToggleDone: () => {},\n  onEdit: () => {},\n  handleEditTask: () => {},\n};\nTaskList.propTypes = {\n  onDeleted: PropTypes.func,\n  onToggleDone: PropTypes.func,\n  onEdit: PropTypes.func,\n  handleEditTask: PropTypes.func,\n};\n\nexport default TaskList;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,IAAP,MAAiB,SAAjB;;;AAEA,MAAMC,QAAQ,GAAG,QAAmE;EAAA,IAAlE;IAAEC,QAAF;IAAYC,SAAZ;IAAuBC,YAAvB;IAAqCC,MAArC;IAA6CC;EAA7C,CAAkE;EAClF,MAAMC,QAAQ,GAAGL,QAAQ,CAACM,GAAT,CAAcC,IAAD,IAAU;IACtC,MAAM;MAAEC,EAAF;MAAM,GAAGC;IAAT,IAAuBF,IAA7B;IACA,oBACE,QAAC,IAAD;MAEE,EAAE,EAAEC,EAFN;MAGE,SAAS,EAAE,MAAMP,SAAS,CAACO,EAAD,CAH5B;MAIE,iBAAiB,EAAE,MAAME,iBAAiB,CAACF,EAAD,CAJ5C;MAKE,eAAe,EAAE,MAAMG,eAAe,CAACH,EAAD,CALxC;MAME,WAAW,EAAEI,WANf;MAAA,GAOMH;IAPN,GACOD,EADP;MAAA;MAAA;MAAA;IAAA,QADF;EAWD,CAbgB,CAAjB;EAcA,oBAAO;IAAI,SAAS,EAAC,WAAd;IAAA,UAA2BH;EAA3B;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CAhBD;;KAAMN,Q;AAkBNA,QAAQ,CAACc,YAAT,GAAwB;EACtBZ,SAAS,EAAE,MAAM,CAAE,CADG;EAEtBC,YAAY,EAAE,MAAM,CAAE,CAFA;EAGtBC,MAAM,EAAE,MAAM,CAAE,CAHM;EAItBC,cAAc,EAAE,MAAM,CAAE;AAJF,CAAxB;AAMAL,QAAQ,CAACe,SAAT,GAAqB;EACnBb,SAAS,EAAEJ,SAAS,CAACkB,IADF;EAEnBb,YAAY,EAAEL,SAAS,CAACkB,IAFL;EAGnBZ,MAAM,EAAEN,SAAS,CAACkB,IAHC;EAInBX,cAAc,EAAEP,SAAS,CAACkB;AAJP,CAArB;AAOA,eAAehB,QAAf"},"metadata":{},"sourceType":"module"}